import{_ as a,o as n,c as s,a as e}from"./app.cd4415e3.js";const t={},p=e(`<h1 id="ts-\u5B66\u4E60\u7B14\u8BB0" tabindex="-1"><a class="header-anchor" href="#ts-\u5B66\u4E60\u7B14\u8BB0" aria-hidden="true">#</a> TS \u5B66\u4E60\u7B14\u8BB0</h1><h2 id="\u4E00\u3001\u57FA\u7840\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u57FA\u7840\u7C7B\u578B" aria-hidden="true">#</a> \u4E00\u3001\u57FA\u7840\u7C7B\u578B</h2><h3 id="\u5E03\u5C14\u7C7B\u578B-blooean" tabindex="-1"><a class="header-anchor" href="#\u5E03\u5C14\u7C7B\u578B-blooean" aria-hidden="true">#</a> \u5E03\u5C14\u7C7B\u578B blooean</h3><blockquote><p><code>blooean</code> let bol:blooean = true|false</p></blockquote><h3 id="\u6570\u7EC4\u7C7B\u578B-number" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7C7B\u578B-number" aria-hidden="true">#</a> \u6570\u7EC4\u7C7B\u578B number</h3><blockquote><p><code>number</code> let num:number = 1</p></blockquote><h3 id="\u5B57\u7B26\u4E32\u7C7B\u578B-string" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u7C7B\u578B-string" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u7C7B\u578B string</h3><blockquote><p><code>string</code> let str:string=&quot;\u597D\u597D\u5B66\u4E60&quot;</p></blockquote><h3 id="\u5143\u7EC4-tuple" tabindex="-1"><a class="header-anchor" href="#\u5143\u7EC4-tuple" aria-hidden="true">#</a> \u5143\u7EC4 Tuple</h3><p>\u5143\u7EC4\u7C7B\u578B\u5141\u8BB8\u8868\u793A\u4E00\u4E2A\u5DF2\u77E5\u5143\u7D20\u6570\u91CF\u548C\u7C7B\u578B\u7684\u6570\u7EC4\uFF0C\u5404\u5143\u7D20\u7684\u7C7B\u578B\u4E0D\u5FC5\u76F8\u540C\u3002</p><blockquote><p><code>Tuple</code> let tup:[string,number] = [&#39;hello&#39;,1]</p></blockquote><h3 id="\u4EFB\u610F-any" tabindex="-1"><a class="header-anchor" href="#\u4EFB\u610F-any" aria-hidden="true">#</a> \u4EFB\u610F any</h3><blockquote><p><code>any</code> let not:any = &quot;1&quot; | let not:any = 1 | let not:any = {a:1} | let not:any = [1]</p></blockquote><h3 id="void-void" tabindex="-1"><a class="header-anchor" href="#void-void" aria-hidden="true">#</a> Void void</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token keyword">void</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;huangshaojun&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E0D\u5E38\u7528\u5230" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u5E38\u7528\u5230" aria-hidden="true">#</a> \u4E0D\u5E38\u7528\u5230</h3><blockquote><p><code>never</code> \u7C7B\u578B\u8868\u793A\u7684\u662F\u90A3\u4E9B\u6C38\u4E0D\u5B58\u5728\u7684\u503C\u7684\u7C7B\u578B</p></blockquote><blockquote><p><code>undefined</code></p></blockquote><blockquote><p><code>null</code></p></blockquote><h3 id="\u7C7B\u578B\u65AD\u8A00-as" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u65AD\u8A00-as" aria-hidden="true">#</a> \u7C7B\u578B\u65AD\u8A00 as &lt;&gt;</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">as</span> <span class="token literal-property property">\u4F7F\u7528\u65B9\u6CD5</span><span class="token operator">:</span>
    <span class="token keyword">let</span> <span class="token literal-property property">str</span><span class="token operator">:</span>any <span class="token operator">=</span> <span class="token string">&quot;lyc\u5927\u50BBx&quot;</span>
    <span class="token keyword">let</span> <span class="token literal-property property">strLength</span><span class="token operator">:</span>number <span class="token operator">=</span> <span class="token punctuation">(</span>str <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">.</span>length
<span class="token operator">&lt;</span><span class="token operator">&gt;</span> \u4F7F\u7528\u65B9\u6CD5<span class="token operator">:</span>
    <span class="token keyword">let</span> <span class="token literal-property property">str</span><span class="token operator">:</span>any <span class="token operator">=</span> <span class="token string">&quot;lyc\u5927\u50BBx&quot;</span>
    <span class="token keyword">let</span> <span class="token literal-property property">strLength</span><span class="token operator">:</span>number <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span>length
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C\u3001\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u63A5\u53E3" aria-hidden="true">#</a> \u4E8C\u3001\u63A5\u53E3</h2><h3 id="\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> \u57FA\u672C\u4F7F\u7528</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Str</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span>string<span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span>number
<span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token literal-property property">str</span><span class="token operator">:</span>Str <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token string">&#39;\u661F\u671F\u4E00&#39;</span><span class="token literal-property property">\uFF0Cvalue</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53EF\u9009\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u53EF\u9009\u5C5E\u6027" aria-hidden="true">#</a> \u53EF\u9009\u5C5E\u6027</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Str</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span>string
    value<span class="token operator">?</span><span class="token operator">:</span>number
<span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token literal-property property">str</span><span class="token operator">:</span>Str <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token string">&#39;\u661F\u671F\u4E00&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53EA\u8BFB\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u53EA\u8BFB\u5C5E\u6027" aria-hidden="true">#</a> \u53EA\u8BFB\u5C5E\u6027</h3><p>\u4E00\u4E9B\u5BF9\u8C61\u5C5E\u6027\u53EA\u80FD\u5728\u5BF9\u8C61\u521A\u521A\u521B\u5EFA\u7684\u65F6\u5019\u4FEE\u6539\u5176\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Str</span><span class="token punctuation">{</span>
    readonly label<span class="token operator">:</span>string
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token literal-property property">str</span><span class="token operator">:</span>Str <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token string">&#39;\u661F\u671F\u4E00&#39;</span><span class="token punctuation">}</span> <span class="token comment">// \u9996\u6B21\u8D4B\u503C\u4E0D\u4F1A\u62A5\u9519</span>
str<span class="token punctuation">.</span>label <span class="token operator">=</span> <span class="token string">&quot;\u661F\u671F\u4E8C&quot;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> \u51FD\u6570\u7C7B\u578B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">SearchFunc</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>source<span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">subString</span><span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token literal-property property">mySearch</span><span class="token operator">:</span> SearchFunc<span class="token punctuation">;</span>
<span class="token function-variable function">mySearch</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">source</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">subString</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>subString<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31),o=[p];function r(l,c){return n(),s("div",null,o)}const d=a(t,[["render",r],["__file","index.html.vue"]]);export{d as default};
